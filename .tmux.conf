# List of plugins
set -g @plugin 'tmux-plugins/tpm'
set -g @plugin 'tmux-plugins/tmux-sensible'
set -g @plugin 'tmux-plugins/tmux-resurrect'
set -g @plugin 'tmux-plugins/tmux-continuum'

# Initialises true colour support
set -g default-terminal "screen-256color"
# This applies to the *host* $TERM
set -ga terminal-overrides ",xterm-256color:Tc"

onedark_black="#202020"
onedark_blue="#61afef"
onedark_yellow="#e5c07b"
onedark_red="#e06c75"
onedark_white="#aab2bf"
onedark_green="#98c379"
onedark_visual_grey="#3e4452"
onedark_comment_grey="#5c6370"

set-window-option -g mode-style "bg=$onedark_visual_grey"

set-option -gq display-panes-active-colour "$onedark_yellow"
set-option -gq display-panes-colour "$onedark_blue"

set-option -gq status-bg "$onedark_black"
set-option -gq status-fg "$onedark_white"

set-option -gq @prefix_highlight_fg "$onedark_black"
set-option -gq @prefix_highlight_bg "$onedark_green"
set-option -gq @prefix_highlight_copy_mode_attr "fg=$onedark_black,bg=$onedark_green"

set-option -gq window-style "fg=$onedark_comment_grey,bg=$onedark_black"
set-option -gq window-active-style "fg=$onedark_white,bg=#151515"

set-option -gq pane-border-fg "$onedark_visual_grey"
set-option -gq pane-active-border-fg "$onedark_green"
set-option -gq pane-border-bg "$onedark_black"
set-option -gq pane-active-border-bg "$onedark_black"

# Detects whether Vim is currently loaded
is_vim="ps -o state= -o comm= -t '#{pane_tty}' \
    | grep -iqE '^[^TXZ ]+ +(\\S+\\/)?g?(view|n?vim?x?)(diff)?$'"

# The main shortcut to access all tmux's commands
set-option -g prefix C-a

# Lets me use Shift+Arrow keys in vim
set-window-option -g xterm-keys on

# Mouse support. Clicking in panes to switch to them, etc
set -g mouse on

# X window name reflect tmux session
set-option -g set-titles on
set-option -g set-titles-string '#S'
set-window-option -g automatic-rename "on"

# So vim knows when it gets focus. Used so that autoread detects changes
# to files not made by the editor. Requires 'tmux-plugins/vim-tmux-focus-events'
# in vim.
set -g focus-events on
# Makes vim more responsive inside tmux??
set -g escape-time 0

# Try to save on memory by limiting how far you can scrollback
set -g history-limit 10000

# Smart pane switching with awareness of Vim splits.
# See: https://github.com/christoomey/vim-tmux-navigator
bind-key -n M-Left  if-shell "$is_vim" "send-keys M-Left"  "select-pane -L"
bind-key -n M-Down  if-shell "$is_vim" "send-keys M-Down"  "select-pane -D"
bind-key -n M-Right if-shell "$is_vim" "send-keys M-Right" "select-pane -R"
bind-key -n M-Up    if-shell "$is_vim" "send-keys M-Up"    "select-pane -U"

# Gotta bind the same nav keys for 'scroll' mode
bind-key -T copy-mode-vi M-Left  select-pane -L
bind-key -T copy-mode-vi M-Down  select-pane -D
bind-key -T copy-mode-vi M-Up    select-pane -U
bind-key -T copy-mode-vi M-Right select-pane -R

# Basic navigation
bind -n M-End      next-window
bind -n M-Home     previous-window
bind -n M-PageUp   switch-client -n
bind -n M-PageDown switch-client -p

# Making splits
bind | split-window -h -c "#{pane_current_path}"
bind \ split-window -h -c "#{pane_current_path}"
bind - split-window -v -c "#{pane_current_path}"
bind _ split-window -v -c "#{pane_current_path}"

# Copying and pasting
set-window-option -g mode-keys vi
# Easily get into copy mode but don't mess with Vim.
bind -n Pageup if-shell "$is_vim" "send-keys Pageup" "copy-mode -u"
# Conventional shortcuts for copy and paste
bind -n -T copy-mode-vi C-c send -X copy-pipe 'xclip -selection c' \; send-keys q
bind -n C-v if-shell "$is_vim" "send-keys C-v" 'run "tmux set-buffer \"$(xclip -o -sel clipboard)\"; tmux paste-buffer"'
bind -n S-Left if-shell "$is_vim" "send-keys S-Left" "copy-mode \; send -X begin-selection \; send-keys Left"
bind -n S-Right if-shell "$is_vim" "send-keys S-Right" "copy-mode \; send -X begin-selection \; send-keys Right"
bind -n C-Up if-shell "$is_vim" "send-keys C-Up" "copy-mode \; send-keys Up"
bind -n C-Down if-shell "$is_vim" "send-keys C-Down" "copy-mode \; send-keys Down"

# CTRL+d select current word
bind -n -T copy-mode-vi C-d send-keys b \; send -X begin-selection \; send-keys E
# CTRL+LEFT/RIGHT move by word
bind -n -T copy-mode-vi C-Left send-keys b
bind -n -T copy-mode-vi C-Right send-keys E

# ALT+z zoom-focusses the current pane
bind -n M-z resize-pane -Z

set -g @continuum-restore 'on'

run-shell "if ! ps aux | grep -v grep | grep 'powerline-daemon -q' > /dev/null; then powerline-daemon -q; fi"
source "/usr/lib/python3.7/site-packages/powerline/bindings/tmux/powerline.conf"

if-shell '[[ $(tmux list-sessions | wc -l ) -eq 0 ]]' 'run-shell $HOME/.tmux/plugins/tmux-resurrect/scripts/restore.sh'

# Initialize TMUX plugin manager (keep this line at the very bottom of tmux.conf)
run '~/.tmux/plugins/tpm/tpm'
